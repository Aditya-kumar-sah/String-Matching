    vector<ll> findLps(string &pat){
       ll n = pat.size();
       
       vector<ll> lps(n);
       lps[0] = 0;
       
       ll pre = 0;
       ll suf = 1;
       
       while(suf<n){
           if(pat[pre] == pat[suf]){
               lps[suf] = pre+1;
               pre++;
               suf++;
           }
           else{
               if(pre == 0){
                   lps[suf] = 0;
                   suf++;
               }
               else{
                   pre = lps[pre-1];
               }
           }
       }
       
       return lps;
    }
    
    vector<ll> kmp(string &txt,string &pat,vector<ll>& lps){
        vector<ll> ans;
        
        ll i=0;
        ll j=0;
        
        if(j == pat.size()) return ans;
        
        while(i<txt.size()){
            if(txt[i] == pat[j]){
                i++;
                j++;
                if(j == pat.size()){
                    ans.push_back(i-j);
                    j = lps[j-1];
                }
            }
            else{
                if(j == 0){
                    i++;
                }
                else{
                    j = lps[j-1];
                }
            }
        }
        
        return ans;
    }
